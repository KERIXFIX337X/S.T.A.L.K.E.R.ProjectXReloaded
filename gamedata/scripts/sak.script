---------------------------------------------------------------------
-- Привет от Сяка 
---------------------------------------------------------------------

function get_lc_data(obj)
	local packet = net_packet()
	obj:STATE_Write(packet)
	local size=packet:w_tell()
	packet:r_seek(0)
	
	local t={}
	t.game_vertex_id = packet:r_u16()
	t.distance = packet:r_float()
	t.direct_control = packet:r_s32()
	t.level_vertex_id = packet:r_s32()
	t.object_flags = packet:r_s32()
	t.custom_data = packet:r_stringZ()
	t.story_id = packet:r_s32()
	t.spawn_story_id = packet:r_s32()
	local shape_count = packet:r_u8()
	t.shapes={}
	for i=1,shape_count do
	local shape_type = packet:r_u8()
	t.shapes[i]={}
	t.shapes[i].shtype=shape_type
	if shape_type == 0 then
	t.shapes[i].center = packet:r_vec3()
	t.shapes[i].radius = packet:r_float()
	else
	t.shapes[i].v1 = packet:r_vec3()
	t.shapes[i].v2 = packet:r_vec3()
	t.shapes[i].v3 = packet:r_vec3()
	t.shapes[i].offset = packet:r_vec3()
	end
	end
	t.restrictor_type = packet:r_u8()
	t.dest_game_vertex_id = packet:r_u16()
	t.dest_level_vertex_id = packet:r_s32()
	t.dest_position = packet:r_vec3()
	t.dest_direction = packet:r_vec3()
	t.dest_level_name = packet:r_stringZ()
	t.dest_graph_point = packet:r_stringZ()
	t.silent_mode = packet:r_u8()
	if packet:r_elapsed() ~= 0 then
		abort("left=%d", packet:r_elapsed())
	end
	return t
end

function set_lc_data(t,obj)
	local packet = net_packet()
	-- obj:STATE_Write(packet)
	packet:w_begin(t.game_vertex_id)
	packet:w_float(t.distance)
	packet:w_s32(t.direct_control)
	packet:w_s32(t.level_vertex_id)
	packet:w_s32(t.object_flags)
	packet:w_stringZ(t.custom_data)
	packet:w_s32(t.story_id)
	packet:w_s32(t.spawn_story_id)
	packet:w_u8(table.getn(t.shapes))
	for i=1,table.getn(t.shapes) do
	packet:w_u8(t.shapes[i].shtype)
	if t.shapes[i].shtype == 0 then
	packet:w_vec3(t.shapes[i].center)
	packet:w_float(t.shapes[i].radius)
	else
	packet:w_vec3(t.shapes[i].v1)
	packet:w_vec3(t.shapes[i].v2)
	packet:w_vec3(t.shapes[i].v3)
	packet:w_vec3(t.shapes[i].offset)
	end
	end
	packet:w_u8(t.restrictor_type)
	packet:w_u16(t.dest_game_vertex_id)
	packet:w_s32(t.dest_level_vertex_id)
	packet:w_vec3(t.dest_position)
	packet:w_vec3(t.dest_direction)
	packet:w_stringZ(t.dest_level_name)
	packet:w_stringZ(t.dest_graph_point)
	packet:w_u8(t.silent_mode)
	packet:r_seek(0)
	obj:STATE_Read(packet, packet:w_tell())
end
-----------------------------------------------------------------------------------------------------------