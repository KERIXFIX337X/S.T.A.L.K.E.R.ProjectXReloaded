-- -*- mode: lua; encoding: windows-1251 -*-

class "CUISpinNum" ( CUIScriptWnd )

function CUISpinNum:__init( st, x, y, width, p )
	super()

	self.value = 0
	self.max_value = p.max or math.huge
	self.min_value = p.min or -math.huge

	width = math.max( width, 45 )
	self:Init( x, y, width, 21 )
	self:SetAutoDelete( true )
	st:AttachChild( self )

	self.frame = CUIFrameLineWnd()
	self.frame:Init( "ui_spiner", 0, 0, width, 21, true )
	self.frame:SetAutoDelete( true )
	self:AttachChild( self.frame )

	self.btn_up = CUI3tButton()
	self.btn_up:Init( "ui_spiner_button_t", width-12, -1, 11, 11 )
	self.btn_up:SetAutoDelete( true )
	self.frame:AttachChild( self.btn_up )
	self:Register( self.btn_up, "btn_up" )
	self:AddCallback( "btn_up", ui_events.BUTTON_CLICKED, self.StopUpdate, self )
	self:AddCallback( "btn_up", ui_events.BUTTON_DOWN, self.ChangeValueUp, self )

	self.btn_down = CUI3tButton()
	self.btn_down:Init( "ui_spiner_button_b", width-12, 10, 11, 11 )
	self.btn_down:SetAutoDelete( true )
	self.frame:AttachChild( self.btn_down )
	self:Register( self.btn_down, "btn_down" )
	self:AddCallback( "btn_down", ui_events.BUTTON_CLICKED, self.StopUpdate, self )
	self:AddCallback( "btn_down", ui_events.BUTTON_DOWN, self.ChangeValueDown, self )

	self.edit = CUIStatic()
	self.edit:Init( 0, 0, width-16, 21 )
	self.edit:SetAutoDelete( true )
	self.edit:SetText( tostring( self.value ) )
	self.edit:SetTextY( 4 )
	self.edit:SetTextAlign( CGameFont.alRight )
	self.frame:AttachChild( self.edit )

	self:Show( true )
end

function CUISpinNum:__finalize()
--	log( "CUISpinNum:__finalize" )
end

function CUISpinNum:SetValue( n )
	self.value = math.floor( n )
	self.edit:SetText( tostring( self.value ) )
	if self.value <= self.min_value then
		self.btn_down:Enable( false )
	elseif self.value >= self.max_value then
		self.btn_up:Enable( false )
	end
end

function CUISpinNum:GetValue()
	return self.value
end

function CUISpinNum:SetTextColor( a, r, g, b )
	self.edit:SetTextColor( a, r, g, b )
end

function CUISpinNum:Enable( b )
	self.btn_up:Enable( b )
	self.btn_down:Enable( b )
	if b then
		self.edit:SetTextColor( 255, 255, 255, 255 )
	else
		self.edit:SetTextColor( 200, 160, 160, 160 )
	end
end

function CUISpinNum:ChangeValueUp()
	self:ChangeValue( 1 )
end

function CUISpinNum:ChangeValueDown()
	self:ChangeValue( -1 )
end

function CUISpinNum:ChangeValue( n )
	self.value = self.value + n
	self.change = n

	if n < 0 then
		if self.value <= self.min_value then
			self.btn_down:Enable( false )
			self.value = self.min_value
			self:StopUpdate()
		elseif not self.btn_up:IsEnabled() then
			self.btn_up:Enable( true )
		end
	elseif n > 0 then
		if self.value >= self.max_value then
			self.btn_up:Enable( false )
			self.value = self.max_value
			self:StopUpdate()
		elseif not self.btn_down:IsEnabled() then
			self.btn_down:Enable( true )
		end
	end

	self.edit:SetText( tostring( self.value ) )
end

function CUISpinNum:Update()
	CUIScriptWnd.Update( self )

	if not self.change then return end

	if self.timer == nil then
		self.timer = profile_timer()
		self.timer:start()
		self.last_time = 0
		self.upd_time = 700000
		self.upd_cnt = 0
	else
		self.timer:stop()
		local tm = self.timer:time()
		if tm - self.last_time > self.upd_time then
			self.last_time = tm
			self.upd_cnt = self.upd_cnt + 1
			if self.upd_cnt == 3 then
				self.upd_time = 400000
			elseif self.upd_cnt == 5 then
				self.upd_time = 200000
			elseif self.upd_cnt == 10 then
				self.upd_time = 100000
				self.change = self.change * 5
			elseif self.upd_cnt == 20 then
				self.upd_time = 50000
			end
			self:ChangeValue( self.change )
		end
		if self.timer then
			self.timer:start()
		end
	end
end

function CUISpinNum:StopUpdate()
	self.change = nil
	if self.timer then
		self.timer:stop()
		self.timer = nil
	end
end

